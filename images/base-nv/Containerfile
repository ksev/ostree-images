ARG RPMFUSION_FREE="https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-37.noarch.rpm"
ARG RPMFUSION_NON_FREE="https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-37.noarch.rpm"

FROM ghcr.io/ksev/ostree-images/base:latest as kernel-query

# Export kernel version to file for use in later stages
# See https://github.com/coreos/layering-examples/blob/main/build-zfs-module/Containerfile for another example
RUN rpm -qa kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}' > /kernel-version.txt && \
    echo "Detected kernel version: $(cat /kernel-version.txt)"

FROM registry.fedoraproject.org/fedora:37 as nvidia-base
ARG RPMFUSION_FREE
ARG RPMFUSION_NON_FREE

# Copy kernel version from kernel-query stage
COPY --from=kernel-query /kernel-version.txt /kernel-version.txt

RUN KERNEL_VERSION=$(cat /kernel-version.txt) && \
    dnf install -y dnf-plugins-core && \ 
    dnf install -y $RPMFUSION_FREE $RPMFUSION_NON_FREE fedora-repos-archive && \
    dnf copr enable bieszczaders/kernel-cachyos && \
    dnf install -y kernel-cachyos-bore && \
    dnf install -y mock xorg-x11-drv-nvidia{,-cuda} binutils && \
    echo "Building akmods" && \
    akmods --kernels $KERNEL_VERSION && \
    echo "Availiable akmods\n $(ls /var/cache/akmods/nvidia)"

FROM ghcr.io/ksev/ostree-images/base:latest

# Copy kernel version from kernel-query stage
COPY --from=kernel-query /kernel-version.txt /kernel-version.txt

# See https://pagure.io/releng/issue/11047 for final location
# Copy kmod rpm from previous stage
COPY --from=nvidia-base /var/cache/akmods/nvidia /tmp/nvidia

RUN KERNEL_VERSION=$(cat /kernel-version.txt) && \
    rpm-ostree install xorg-x11-drv-nvidia{,-cuda} && \
    rpm-ostree install /tmp/nvidia/*${KERNEL_VERSION}*.rpm && \
    rm -rf /var/* && rm -rf /tmp/nvidia && rm -f /kernel-version.txt && \
    ostree container commit

LABEL NAME base-nv
LABEL VERSION latest
